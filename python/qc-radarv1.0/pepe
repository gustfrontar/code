netcdf cfrad.s20231216_161946.e20231216_161947.RMA1_0303_01 {
dimensions:
	time = UNLIMITED ; // (5400 currently)
	range = 523 ;
	sweep = 15 ;
	string_length = 32 ;
variables:
	float time(time) ;
		time:long_name = "time_in_seconds_since_volume_start" ;
		time:units = "seconds since 2023-12-16T16:13:07Z" ;
		time:standard_name = "time" ;
		time:calendar = "gregorian" ;
		time:comment = "Coordinate variable for time. Time at the center of each ray, in fractional seconds since the global variable time_coverage_start" ;
	float range(range) ;
		range:long_name = "range_to_measurement_volume" ;
		range:units = "meters" ;
		range:standard_name = "projection_range_coordinate" ;
		range:axis = "radial_range_coordinate" ;
		range:spacing_is_constant = "true" ;
		range:comment = "Coordinate variable for range. Range to center of each bin." ;
		range:meters_to_center_of_first_gate = 2100. ;
		range:meters_between_gates = 450. ;
	float azimuth(time) ;
		azimuth:long_name = "azimuth_angle_from_true_north" ;
		azimuth:units = "degrees" ;
		azimuth:standard_name = "beam_azimuth_angle" ;
		azimuth:axis = "radial_azimuth_coordinate" ;
		azimuth:comment = "Azimuth of antenna relative to true north" ;
	double elevation(time) ;
		elevation:long_name = "elevation_angle_from_horizontal_plane" ;
		elevation:units = "degrees" ;
		elevation:standard_name = "beam_elevation_angle" ;
		elevation:axis = "radial_elevation_coordinate" ;
		elevation:comment = "Elevation of antenna relative to the horizontal plane" ;
	float reflectivity_vv(time, range) ;
		reflectivity_vv:_FillValue = -9999.f ;
		reflectivity_vv:long_name = "Reflectivity" ;
		reflectivity_vv:units = "dBZ" ;
		reflectivity_vv:standard_name = "equivalent_reflectivity_factor" ;
		reflectivity_vv:coordinates = "elevation azimuth range" ;
		reflectivity_vv:is_checked = "False" ;
	double reflectivity(time, range) ;
		reflectivity:_FillValue = -9999. ;
		reflectivity:long_name = "Reflectivity" ;
		reflectivity:units = "dBZ" ;
		reflectivity:standard_name = "equivalent_reflectivity_factor" ;
		reflectivity:coordinates = "elevation azimuth range" ;
		reflectivity:is_checked = "True" ;
	float differential_reflectivity(time, range) ;
		differential_reflectivity:_FillValue = -9999.f ;
		differential_reflectivity:long_name = "Differential reflectivity" ;
		differential_reflectivity:units = "dB" ;
		differential_reflectivity:standard_name = "log_differential_reflectivity_hv" ;
		differential_reflectivity:coordinates = "elevation azimuth range" ;
		differential_reflectivity:is_checked = "False" ;
	double cross_correlation_ratio(time, range) ;
		cross_correlation_ratio:_FillValue = -9999. ;
		cross_correlation_ratio:long_name = "Cross correlation ratio (RHOHV)" ;
		cross_correlation_ratio:units = "ratio" ;
		cross_correlation_ratio:standard_name = "cross_correlation_ratio_hv" ;
		cross_correlation_ratio:valid_max = 1. ;
		cross_correlation_ratio:valid_min = 0. ;
		cross_correlation_ratio:coordinates = "elevation azimuth range" ;
		cross_correlation_ratio:is_checked = "True" ;
	float differential_phase(time, range) ;
		differential_phase:_FillValue = -9999.f ;
		differential_phase:long_name = "Differential phase (PhiDP)" ;
		differential_phase:units = "degrees" ;
		differential_phase:standard_name = "differential_phase_hv" ;
		differential_phase:valid_max = 180. ;
		differential_phase:valid_min = -180. ;
		differential_phase:coordinates = "elevation azimuth range" ;
		differential_phase:is_checked = "False" ;
	float spectrum_width(time, range) ;
		spectrum_width:_FillValue = -9999.f ;
		spectrum_width:long_name = "Doppler spectrum width" ;
		spectrum_width:units = "meters_per_second" ;
		spectrum_width:standard_name = "doppler_spectrum_width" ;
		spectrum_width:coordinates = "elevation azimuth range" ;
		spectrum_width:is_checked = "False" ;
	double velocity(time, range) ;
		velocity:_FillValue = -9999. ;
		velocity:long_name = "Mean dopper velocity" ;
		velocity:units = "meters_per_second" ;
		velocity:standard_name = "radial_velocity_of_scatterers_away_from_instrument" ;
		velocity:coordinates = "elevation azimuth range" ;
		velocity:is_checked = "True" ;
	double cref(time, range) ;
		cref:_FillValue = -9999. ;
		cref:long_name = "Reflectivity" ;
		cref:units = "dBZ" ;
		cref:standard_name = "equivalent_reflectivity_factor" ;
		cref:coordinates = "elevation azimuth range" ;
		cref:is_checked = "True" ;
	double cv(time, range) ;
		cv:_FillValue = -9999. ;
		cv:long_name = "Mean dopper velocity" ;
		cv:units = "meters_per_second" ;
		cv:standard_name = "radial_velocity_of_scatterers_away_from_instrument" ;
		cv:coordinates = "elevation azimuth range" ;
		cv:is_checked = "True" ;
	int sweep_number(sweep) ;
		sweep_number:long_name = "Sweep number" ;
		sweep_number:units = "count" ;
		sweep_number:standard_name = "sweep_number" ;
	float fixed_angle(sweep) ;
		fixed_angle:long_name = "Target angle for sweep" ;
		fixed_angle:units = "degrees" ;
		fixed_angle:standard_name = "target_fixed_angle" ;
	int sweep_start_ray_index(sweep) ;
		sweep_start_ray_index:long_name = "Index of first ray in sweep, 0-based" ;
		sweep_start_ray_index:units = "count" ;
	int sweep_end_ray_index(sweep) ;
		sweep_end_ray_index:long_name = "Index of last ray in sweep, 0-based" ;
		sweep_end_ray_index:units = "count" ;
	char sweep_mode(sweep, string_length) ;
		sweep_mode:long_name = "Sweep mode" ;
		sweep_mode:units = "unitless" ;
		sweep_mode:standard_name = "sweep_mode" ;
		sweep_mode:comment = "Options are: \"sector\", \"coplane\", \"rhi\", \"vertical_pointing\", \"idle\", \"azimuth_surveillance\", \"elevation_surveillance\", \"sunscan\", \"pointing\", \"manual_ppi\", \"manual_rhi\"" ;
	double ray_angle_res(sweep) ;
		ray_angle_res:long_name = "angular_resolution_between_rays" ;
		ray_angle_res:units = "degrees" ;
	double nyquist_velocity(time) ;
		nyquist_velocity:long_name = "unambiguous_doppler_velocity" ;
		nyquist_velocity:units = "meters per second" ;
		nyquist_velocity:meta_group = "instrument_parameters" ;
	double radar_beam_width_v ;
		radar_beam_width_v:long_name = "half_power_radar_beam_width_v_channel" ;
		radar_beam_width_v:units = "degrees" ;
		radar_beam_width_v:meta_group = "instrument_parameters" ;
	double radar_beam_width_h ;
		radar_beam_width_h:long_name = "half_power_radar_beam_width_h_channel" ;
		radar_beam_width_h:units = "degrees" ;
		radar_beam_width_h:meta_group = "instrument_parameters" ;
	double latitude ;
		latitude:long_name = "Latitude" ;
		latitude:units = "degrees_north" ;
		latitude:standard_name = "Latitude" ;
	double longitude ;
		longitude:long_name = "Longitude" ;
		longitude:units = "degrees_east" ;
		longitude:standard_name = "Longitude" ;
	double altitude ;
		altitude:long_name = "Altitude" ;
		altitude:units = "meters" ;
		altitude:standard_name = "Altitude" ;
		altitude:positive = "up" ;
	double altitude_agl ;
	char time_coverage_start(string_length) ;
		time_coverage_start:long_name = "UTC time of first ray in the file" ;
		time_coverage_start:units = "unitless" ;
	char time_coverage_end(string_length) ;
		time_coverage_end:long_name = "UTC time of last ray in the file" ;
		time_coverage_end:units = "unitless" ;
	int volume_number ;
		volume_number:long_name = "Volume number" ;
		volume_number:units = "unitless" ;
	char platform_type(string_length) ;
		platform_type:long_name = "Platform type" ;
	char instrument_type(string_length) ;
		instrument_type:long_name = "Instrument type" ;
	char primary_axis(string_length) ;
		primary_axis:long_name = "Primary axis" ;

// global attributes:
		:Conventions = "CF/Radial instrument_parameters" ;
		:version = "H5rad 2.0" ;
		:title = "" ;
		:institution = "" ;
		:references = "" ;
		:source = "RMA:1,WMO:00000" ;
		:comment = "" ;
		:instrument_name = "RMA1" ;
		:original_container = "SINARAME_h5" ;
		:SINARAME_conventions = "ODIM_H5/V2_1" ;
		:field_names = "DBZV, DBZH, ZDR, RHOHV, PHIDP, WRAD, VRAD" ;
		:date = "20231216_161946" ;
		:history = "" ;
}
